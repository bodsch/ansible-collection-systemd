---
name: CI

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
  push:
    branches:
      - 'main'
      - 'feature/**'
      - 'fix/**'
      - '!doc/**'
  pull_request:
    branches:
      - 'main'
      - 'feature/**'
      - 'fix/**'
      - '!doc/**'

env:
  COLLECTION_NAMESPACE: bodsch
  COLLECTION_NAME: systemd
  PY_COLORS: '1'
  ANSIBLE_FORCE_COLOR: '1'

defaults:
  run:
    working-directory: 'ansible-collection-systemd'

jobs:
  arch:
    name: "${{ matrix.image }}: ${{ matrix.collection_role }} (ansible ${{ matrix.ansible }}, python ${{ matrix.python }})"
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        image:
          - archlinux:latest
        ansible:
          - '8.5'
        python:
          - '3.11'
          - '3.12'
        scenario:
          - default

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'ansible-collection-systemd'
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: üêç set up python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python }}"

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: force reinstall of community.docker
        run: |
          mkdir -p /home/runner/.ansible/collections
          ansible-galaxy collection install community.docker --force

      - name: Install collection
        run: |
          make \
            install

      - name: test with tox
        run: |
          make \
            test \
              -e TOX_ANSIBLE="ansible_${{ matrix.ansible }}" \
              -e DISTRIBUTION="${{ matrix.image }}" \
              -e COLLECTION_SCENARIO="${{ matrix.scenario }}"
